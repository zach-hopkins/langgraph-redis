[tool.poetry]
name = "langgraph-checkpoint-redis"
version = "0.0.3"
description = "Library with a Redis implementation of LangGraph checkpoint saver."
authors = ["Redis Inc. <applied.ai@redis.com>"]
license = "MIT"
readme = "README.md"
repository = "https://www.github.com/redis-developer/langgraph-redis"
keywords = ["ai", "redis", "redis-client", "vector-database", "vector-search"]
classifiers = [
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
]
packages = [{ include = "langgraph" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.14"
langgraph-checkpoint = "^2.0.10"
redisvl = "^0.4.1"
redis = "^5.2.1"
python-ulid = "^3.0.0"
langgraph = ">=0.2.70,<0.4.0"

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
codespell = "^2.2.0"
pytest = "^7.2.1"
anyio = "^4.4.0"
pytest-asyncio = "^0.21.1"
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}
pytest-mock = "^3.11.1"
mypy = "^1.10.0"
types-redis = "^4.6.0.20241004"
aioconsole = "^0.8.1"
langchain-openai = "^0.3.2"
testcontainers = "^4.9.1"
isort = "^6.0.0"
cryptography = { version = ">=44.0.1", markers = "python_version > '3.9.1'" }

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
addopts = "--strict-markers --strict-config --durations=5 -vv"
asyncio_mode = "auto"

[tool.poetry.scripts]
format = "scripts:format"
check-format = "scripts:check_format"
sort-imports = "scripts:sort_imports"
check-sort-imports = "scripts:check_sort_imports"
check-lint = "scripts:check_lint"
check-mypy = "scripts:check_mypy"
test = "scripts:test"
test-verbose = "scripts:test_verbose"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
exclude = '''
(
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | build
  | dist
  | setup.py
)
'''

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
disallow_untyped_defs = true
explicit_package_bases = true
warn_no_return = false
warn_unused_ignores = true
warn_redundant_casts = true
allow_redefinition = true
ignore_missing_imports = true
disable_error_code = "typeddict-item, return-value"
